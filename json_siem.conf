input {
	exec {
		command => '/siem-aka.py'
		interval => 5
	}
}
filter{
    split {
	}
    json{
        source => "message"
        skip_on_invalid_json => "true"
    }
    date {
      match => [ "[httpMessage][start]", "UNIX" ]
    }
    urldecode {
        field => "[httpMessage][requestHeaders]"
    }
    urldecode {
        field => "[httpMessage][responseHeaders]"
    }
    mutate {
    remove_field => ["message","path","host","command"]
    }
    mutate {
      convert => { "[geo][asn]" => "integer" 
                   "[httpMessage][port]" => "integer"
                   "[httpMessage][bytes]" => "integer"
                   "[httpMessage][status]" => "integer"
                   "[httpMessage][configID]" => "integer"
                   "[httpMessage][ruleVersion]" => "integer"
                   "[attackData][rules][ruleVersion]" => "integer"
                   "[attackData][rules][rule]" => "integer"
                   "version" => "integer"
      }
    }
    if [attackData][clientReputation] {
       kv {
	     source => "[attackData][clientReputation]"
	     target => "[attackData][clientReputation]"
	     field_split => ";"
	     value_split => "="
	    }
    }
    if "_jsonparsefailure" in [tags] {
        drop { }
  }
    if "[message]" =~ /^\s*$/ {
        drop { }
 }

}

output {
	 elasticsearch {
                hosts => ["${ES_URL}"]
                index => "${ES_INDEX}akamai-siem-${CONNECTORID}-%{+YYYY.MM.dd}"
                manage_template => true
                template => "/akamai-siem_template.json"
                template_name => "akamai-siem"
                template_overwrite => true
                document_type => "akamai-siem"
            }
}
